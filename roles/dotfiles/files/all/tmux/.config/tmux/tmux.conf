# Defaults
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -s set-clipboard on

# fix color
set -ag terminal-overrides ",$TERM:RGB"
# set -g default-terminal "xterm-kitty"

# top status bar
set-option -g status-position top

# TokyoNight colors for Tmux
# ----- Messages -----
set-option -g mode-style 'bg=blue, fg=black'
set-option -g message-style 'bg=blue, fg=black'

# ----- Center -----
set-option -g status-justify left
set-option -g status-style "bg=black"
set-window-option -g window-status-current-format '#{?window_zoomed_flag,#[bold]#[fg=blue#, bg=black]#I:#W,#[bold]#[fg=blue, bg=black]#[fg=black, bg=blue]#I:#W#[fg=blue, bg=black]}'
set-window-option -g window-status-format '#I:#W'
set-window-option -g window-status-separator ' '
set-window-option -g window-status-style "bg=black"
set-window-option -g window-status-current-style "bg=blue,fg=black"

# ----- Left -----
set-option -g status-left ""


# ----- Right -----
set-option -g status-right " #S #[fg=blue, bg=black]"
set-option -g status-right-style "bg=blue,fg=black"
set-option -g status-right-length 30

# unbind C-b
# set-option -g prefix C-a
# bind-key C-a send-prefix

# vim like
set -g @plugin 'tmux-plugins/tmux-yank'

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" { send-keys M-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'M-j' if-shell "$is_vim" { send-keys M-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'M-k' if-shell "$is_vim" { send-keys M-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'M-l' if-shell "$is_vim" { send-keys M-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }

bind-key -T copy-mode-vi 'M-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'M-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'M-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'M-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi Space send-keys -X rectangle-toggle 
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -n M-g previous-window
bind-key -n M-\; next-window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9
bind-key -n M-s split-window -v -c "#{pane_current_path}"
bind-key -n M-v split-window -h -c "#{pane_current_path}"
bind-key -n M-q kill-pane
bind-key -n M-Enter new-window
bind-key -n M-Q kill-window
bind-key -n M-0 last-window
bind-key -n M-t run-shell "tmux neww ~/.local/bin/tmux-sessionizer"
bind-key -r O run-shell "~/.local/bin/tmux-sessionizer ~/Documents/commercial/orca"
bind-key -r D run-shell "~/.local/bin/tmux-sessionizer ~/.dotfiles"
bind-key -r C run-shell "~/.local/bin/tmux-sessionizer ~/Documents/commercial/cli"
bind-key -r L run-shell "~/.local/bin/tmux-sessionizer ~/Documents/personal/projects/leetcode"
bind-key -n M-o switch-client -l
bind-key -n M-f resize-pane -Z
bind-key -n M-= choose-window
bind-key -n M-r source-file $XDG_CONFIG_HOME/tmux/tmux.conf \; display-message "tmux.conf reloaded."

# Mouse support
set -g mouse on
set-option -wg main-pane-width 50%
set-option -wg main-pane-height 50%

# start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
